{"version":3,"sources":["components/Calculator.js","components/Button.js","components/Keyboard.js","components/Label.js","components/ResultBox.js","App.js","index.js"],"names":["Calculator","props","useState","formula","setFormula","lastKeyPressed","setLastKeyPressed","decimalUsed","setDecimalUsed","handleClick","event","newKeyPressed","target","value","newFormula","isNaN","eval","console","log","text","digitEventListener","Button","onClick","type","caption","Keyboard","Label","readOnly","rows","cols","maxLength","dir","ResultBox","App","className","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.5d976226.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Keyboard from \"./Keyboard.js\";\nimport ResultBox from \"./ResultBox.js\";\n\nconst Calculator = (props) => {\n  const [formula, setFormula] = useState(\"\");\n  const [lastKeyPressed, setLastKeyPressed] = useState(\"\");\n  const [decimalUsed, setDecimalUsed] = useState(false);\n\n  //TO-DO: decompose into diferent functions to handle events for each kind of button type (digits, funtional buttons, and operations)\n  const handleClick = (event) => {\n    let newKeyPressed = event.target.value;\n    let newFormula;\n\n    if (isNaN(newKeyPressed) && !(newKeyPressed === \".\")) {\n      setDecimalUsed(false);\n    }\n\n    if (newKeyPressed === \"C\") {\n      newKeyPressed = \"\";\n      newFormula = \"\";\n      setLastKeyPressed(newKeyPressed);\n      setFormula(newFormula);\n    } else if (newKeyPressed === \".\" && decimalUsed === true) {\n      return;\n    } else if (lastKeyPressed === \"\" && newKeyPressed === \"=\") {\n      return;\n    } else if (\n      lastKeyPressed === \"=\" &&\n      isNaN(newKeyPressed) &&\n      !(newKeyPressed === \".\") &&\n      !(newKeyPressed === \"=\")\n    ) {\n      newFormula = formula + newKeyPressed;\n      setLastKeyPressed(newKeyPressed);\n      setFormula(newFormula);\n    } else if (lastKeyPressed === \"=\" && !isNaN(newKeyPressed)) {\n      return;\n    } else if (\n      !(formula === \"\") &&\n      !isNaN(lastKeyPressed) &&\n      newKeyPressed === \"=\"\n    ) {\n      newFormula = eval(formula);\n      setLastKeyPressed(newKeyPressed);\n      setFormula(newFormula);\n      setDecimalUsed(false);\n    } else if (formula === \"\" || !isNaN(lastKeyPressed)) {\n      if (newKeyPressed === \".\") {\n        setDecimalUsed(true);\n      }\n      newFormula = formula + newKeyPressed;\n      setLastKeyPressed(newKeyPressed);\n      setFormula(newFormula);\n    } else if (isNaN(lastKeyPressed) && !isNaN(newKeyPressed)) {\n      newFormula = formula + newKeyPressed;\n      setLastKeyPressed(newKeyPressed);\n      setFormula(newFormula);\n    }\n    console.log(newFormula);\n  };\n  return (\n    <div>\n      <ResultBox text={formula} />\n      {/*TO-DO: sent event handlers for each kind of button type*/}\n      <Keyboard digitEventListener={handleClick} />\n    </div>\n  );\n};\n\nexport default Calculator;\n","import React from \"react\";\n\nconst Button = (props) => {\n  return (\n    <button onClick={props.onClick} type=\"button\" value={props.caption}>\n      {props.caption}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"./Button.js\";\n\nconst Keyboard = (props) => {\n  //TO-DO: add styles support and refactor presentation if needed\n  return (\n    <div>\n      <Button caption=\"7\" onClick={props.digitEventListener} />\n      <Button caption=\"8\" onClick={props.digitEventListener} />\n      <Button caption=\"9\" onClick={props.digitEventListener} />\n      <Button caption=\"/\" onClick={props.digitEventListener} />\n      <br />\n      <Button caption=\"4\" onClick={props.digitEventListener} />\n      <Button caption=\"5\" onClick={props.digitEventListener} />\n      <Button caption=\"6\" onClick={props.digitEventListener} />\n      <Button caption=\"*\" onClick={props.digitEventListener} />\n      <br />\n      <Button caption=\"1\" onClick={props.digitEventListener} />\n      <Button caption=\"2\" onClick={props.digitEventListener} />\n      <Button caption=\"3\" onClick={props.digitEventListener} />\n      <Button caption=\"-\" onClick={props.digitEventListener} />\n      <br />\n      <Button caption=\"0\" onClick={props.digitEventListener} />\n      <Button caption=\".\" onClick={props.digitEventListener} />\n      <Button caption=\"C\" onClick={props.digitEventListener} />\n      <Button caption=\"+\" onClick={props.digitEventListener} />\n      <br />\n      <Button caption=\"=\" onClick={props.digitEventListener} />\n    </div>\n  );\n};\n\nexport default Keyboard;\n","import React from \"react\";\n\nconst Label = (props) => {\n  return (\n    //TO-DO:fix formula elements not displaying in the right order\n    <textarea\n      value={props.text}\n      readOnly={props.readOnly}\n      rows={props.rows}\n      cols={props.cols}\n      maxLength={props.maxLength}\n      dir=\"rtl\"\n    />\n  );\n};\n\nexport default Label;\n","import React from \"react\";\nimport Label from \"./Label.js\";\n\nconst ResultBox = (props) => {\n  return (\n    <Label text={props.text} readOnly={true} rows=\"1\" cols=\"8\" maxLength=\"4\" />\n  );\n};\n\nexport default ResultBox;\n","import React from \"react\";\nimport \"./styles.css\";\nimport Calculator from \"./components/Calculator.js\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}